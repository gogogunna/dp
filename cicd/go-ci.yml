name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: coverage.out
          flags: unittests

      - name: Run security audit
        run: go vet ./...

      - name: Run staticcheck
        uses: dominikh/setup-staticcheck@v1
        with:
          version: 'latest'
        continue-on-error: true

      - name: Build
        run: go build -v ./cmd/yourapp

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  integration:
    name: Integration Tests
    needs: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Wait for PostgreSQL
        run: sleep 5

      - name: Run integration tests
        env:
          DB_URL: "postgres://testuser:testpass@localhost:5432/testdb?sslmode=disable"
        run: go test -tags=integration -v ./...